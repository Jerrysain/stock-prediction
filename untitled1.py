# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bdK5EYES01pzmXDgiKo1EZ9DxFUVVMzA
"""

# Import necessary libraries
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

# Load data into a Pandas dataframe
df = pd.read_csv('stock_data.csv')

# Preprocess data by dropping any missing values and selecting relevant columns
df = df.dropna()
df = df[['Date', 'Close']]

# Define the features and target variable
X = np.array(df['Close'].shift(1)).reshape(-1, 1)  # yesterday's closing price
y = np.array(df['Close'])

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=False)

# Train a linear regression model on the training data
model = LinearRegression()
model.fit(X_train, y_train)

# Evaluate the model on the testing data
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print('Mean squared error:', mse)
print('R2 score:', r2)

# Make predictions for future stock prices
last_price = np.array(df.tail(1)['Close']).reshape(-1, 1)
next_day_price = model.predict(last_price)
print('Predicted price for tomorrow:', next_day_price)